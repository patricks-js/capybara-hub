{
  "openapi": "3.0.0",
  "paths": {
    "/api/bookings": {
      "post": {
        "operationId": "BookingsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookingDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "bookings"
        ]
      },
      "get": {
        "operationId": "BookingsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get All bookings successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Booking"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found bookings"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "bookings"
        ]
      }
    },
    "/api/bookings/{id}": {
      "get": {
        "operationId": "BookingsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get booking by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Booking"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found bookings"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "bookings"
        ]
      },
      "patch": {
        "operationId": "BookingsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateBookingDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update booking successfully"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found bookings"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "bookings"
        ]
      },
      "delete": {
        "operationId": "BookingsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete booking successfully"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found bookings"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "bookings"
        ]
      }
    },
    "/api/rooms": {
      "post": {
        "operationId": "RoomsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRoomDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "rooms"
        ]
      },
      "get": {
        "operationId": "RoomsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get All rooms successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Room"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found rooms"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "rooms"
        ]
      }
    },
    "/api/rooms/{id}": {
      "get": {
        "operationId": "RoomsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get rooms by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Room"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found rooms"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "rooms"
        ]
      },
      "patch": {
        "operationId": "RoomsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreateRoomDto"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update rooms successfully"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found rooms"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "rooms"
        ]
      },
      "delete": {
        "operationId": "RoomsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete rooms successfully"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found rooms"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "rooms"
        ]
      }
    },
    "/api/hotel": {
      "post": {
        "operationId": "HotelController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHotelDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "hotel"
        ]
      },
      "get": {
        "operationId": "HotelController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get All hotel successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Hotel"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found hotel"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "hotel"
        ]
      }
    },
    "/api/hotel/{id}": {
      "get": {
        "operationId": "HotelController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get hotel by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Hotel"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found hotel"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "hotel"
        ]
      },
      "patch": {
        "operationId": "HotelController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateHotelDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update hotel successfully"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found hotel"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "hotel"
        ]
      },
      "delete": {
        "operationId": "HotelController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete hotel successfully"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found hotel"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "hotel"
        ]
      }
    },
    "/api/users": {
      "post": {
        "operationId": "UserController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      },
      "get": {
        "operationId": "UserController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get All users successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found users"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ]
      }
    },
    "/api/users/login": {
      "post": {
        "operationId": "UserController_login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "tags": [
          "user"
        ]
      }
    },
    "/api/users/{id}": {
      "get": {
        "operationId": "UserController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get user by id successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found user"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ]
      },
      "patch": {
        "operationId": "UserController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update user successfully"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found user"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ]
      },
      "delete": {
        "operationId": "UserController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete user successfully"
          },
          "403": {
            "description": "Forbidden."
          },
          "404": {
            "description": "Not found user"
          }
        },
        "security": [
          {
            "bearer": []
          }
        ],
        "tags": [
          "user"
        ]
      }
    }
  },
  "info": {
    "title": "Capybara Hub",
    "description": "Capybara Hub Hotel System Management API",
    "version": "0.0.1",
    "contact": {}
  },
  "tags": [
    {
      "name": "CapybaraHub",
      "description": ""
    }
  ],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "CreateBookingDto": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "room_id": {
            "type": "string"
          },
          "check_in_date": {
            "type": "string"
          },
          "check_out_date": {
            "type": "string"
          },
          "total_price": {
            "type": "number"
          }
        },
        "required": [
          "user_id",
          "room_id",
          "check_in_date",
          "check_out_date",
          "total_price"
        ]
      },
      "Booking": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "room_id": {
            "type": "string"
          },
          "hotel_id": {
            "type": "string"
          },
          "check_in_date": {
            "format": "date-time",
            "type": "string"
          },
          "check_out_date": {
            "format": "date-time",
            "type": "string"
          },
          "total_price": {
            "type": "number"
          },
          "status": {
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "room_id",
          "hotel_id",
          "check_in_date",
          "check_out_date",
          "total_price",
          "status"
        ]
      },
      "CreateRoomDto": {
        "type": "object",
        "properties": {
          "hotel_id": {
            "type": "string"
          },
          "room_number": {
            "type": "string"
          },
          "room_type": {
            "type": "string"
          },
          "price_per_night": {
            "type": "number"
          }
        },
        "required": [
          "hotel_id",
          "room_number",
          "room_type",
          "price_per_night"
        ]
      },
      "Room": {
        "type": "object",
        "properties": {
          "hotel_id": {
            "type": "string"
          },
          "room_type": {
            "type": "string"
          },
          "room_number": {
            "type": "string"
          },
          "price_per_night": {
            "type": "number"
          },
          "is_available": {
            "type": "boolean"
          }
        },
        "required": [
          "hotel_id",
          "room_type",
          "room_number",
          "price_per_night",
          "is_available"
        ]
      },
      "CreateHotelDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip_code": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "address",
          "city",
          "state",
          "zip_code",
          "phone_number"
        ]
      },
      "Hotel": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "zip_code": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "description",
          "address",
          "city",
          "state",
          "zip_code",
          "phone_number"
        ]
      },
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "password",
          "phone"
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password_hash": {
            "type": "string"
          },
          "phone": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "email",
          "password_hash",
          "phone"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      }
    }
  }
}