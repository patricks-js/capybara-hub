{
  "openapi": "3.0.0",
  "paths": {
    "/api/auth/signup": {
      "post": {
        "operationId": "AuthController_signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SignupDto" }
            }
          }
        },
        "responses": {
          "201": { "description": "Customer created successfully" },
          "409": { "description": "Customer already exists" }
        },
        "summary": "Signup customer",
        "tags": ["auth"]
      }
    },
    "/api/auth/signin": {
      "post": {
        "operationId": "AuthController_signin",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/SigninDto" }
            }
          }
        },
        "responses": {
          "200": { "description": "Customer signed in successfully" },
          "401": { "description": "Invalid credentials" }
        },
        "summary": "Signin customer",
        "tags": ["auth"]
      }
    },
    "/api/customers/{id}": {
      "put": {
        "operationId": "CustomersController_updateProfile",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateCustomerDto" }
            }
          }
        },
        "responses": {
          "200": { "description": "Update profile successfully" }
        },
        "tags": ["customers"]
      }
    },
    "/api/hotels": {
      "post": {
        "operationId": "HotelsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateHotelDto" }
            }
          }
        },
        "responses": { "201": { "description": "" } },
        "tags": ["hotels"]
      }
    },
    "/api/rooms": {
      "post": {
        "operationId": "RoomsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateRoomDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Room" }
              }
            }
          },
          "403": { "description": "Forbidden." }
        },
        "tags": ["rooms"]
      },
      "get": {
        "operationId": "RoomsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get All rooms successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Room" }
                }
              }
            }
          },
          "403": { "description": "Forbidden." },
          "404": { "description": "Not found rooms" }
        },
        "tags": ["rooms"]
      }
    },
    "/api/rooms/{id}": {
      "get": {
        "operationId": "RoomsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get rooms by id successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Room" }
              }
            }
          },
          "403": { "description": "Forbidden." },
          "404": { "description": "Not found rooms" }
        },
        "tags": ["rooms"]
      },
      "patch": {
        "operationId": "RoomsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": { "$ref": "#/components/schemas/CreateRoomDto" }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Update rooms successfully" },
          "403": { "description": "Forbidden." },
          "404": { "description": "Not found rooms" }
        },
        "tags": ["rooms"]
      },
      "delete": {
        "operationId": "RoomsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Delete rooms successfully" },
          "403": { "description": "Forbidden." },
          "404": { "description": "Not found rooms" }
        },
        "tags": ["rooms"]
      }
    },
    "/api/bookings": {
      "post": {
        "operationId": "BookingsController_create",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/CreateBookingDto" }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The record has been successfully created.",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Booking" }
              }
            }
          },
          "403": { "description": "Forbidden." }
        },
        "tags": ["bookings"]
      },
      "get": {
        "operationId": "BookingsController_findAll",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Get All bookings successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": { "$ref": "#/components/schemas/Booking" }
                }
              }
            }
          },
          "403": { "description": "Forbidden." },
          "404": { "description": "Not found bookings" }
        },
        "tags": ["bookings"]
      }
    },
    "/api/bookings/{id}": {
      "get": {
        "operationId": "BookingsController_findOne",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "Get booking by id successfully",
            "content": {
              "application/json": {
                "schema": { "$ref": "#/components/schemas/Booking" }
              }
            }
          },
          "403": { "description": "Forbidden." },
          "404": { "description": "Not found bookings" }
        },
        "tags": ["bookings"]
      },
      "patch": {
        "operationId": "BookingsController_update",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/UpdateBookingDto" }
            }
          }
        },
        "responses": {
          "200": { "description": "Update booking successfully" },
          "403": { "description": "Forbidden." },
          "404": { "description": "Not found bookings" }
        },
        "tags": ["bookings"]
      },
      "delete": {
        "operationId": "BookingsController_remove",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": { "description": "Delete booking successfully" },
          "403": { "description": "Forbidden." },
          "404": { "description": "Not found bookings" }
        },
        "tags": ["bookings"]
      }
    }
  },
  "info": {
    "title": "Capybara Hub",
    "description": "Capybara Hub System Management API",
    "version": "0.1.0",
    "contact": {}
  },
  "tags": [{ "name": "Capybara Hub", "description": "" }],
  "servers": [],
  "components": {
    "securitySchemes": {
      "bearer": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      }
    },
    "schemas": {
      "SignupDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Customer full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "Customer email address",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "description": "Customer password - minimum 8 characters, at least one uppercase letter, one lowercase letter, one number, and one special character",
            "example": "Password123@"
          },
          "phone": {
            "type": "string",
            "description": "Customer BR phone number",
            "example": "+5511999999999"
          }
        },
        "required": ["name", "email", "password"]
      },
      "SigninDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "Customer email address",
            "example": "john.doe@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "Customer password",
            "example": "Password123@"
          }
        },
        "required": ["email", "password"]
      },
      "UpdateCustomerDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Customer full name",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "description": "Customer email address",
            "example": "john.doe@example.com"
          },
          "password": {
            "type": "string",
            "description": "Customer password",
            "example": "securePassword123"
          },
          "phone": {
            "type": "string",
            "description": "Customer phone number",
            "example": "+55 11 98765-4321"
          }
        }
      },
      "CreateHotelAddressDto": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string",
            "description": "Street name",
            "example": "Avenida Paulista"
          },
          "number": {
            "type": "number",
            "description": "Street number",
            "example": 1000
          },
          "postalCode": {
            "type": "string",
            "description": "Postal code",
            "example": "01310-100"
          },
          "state": {
            "type": "string",
            "description": "State",
            "example": "SP"
          },
          "city": {
            "type": "string",
            "description": "City",
            "example": "São Paulo"
          },
          "country": {
            "type": "string",
            "description": "Country",
            "example": "Brasil"
          }
        },
        "required": [
          "street",
          "number",
          "postalCode",
          "state",
          "city",
          "country"
        ]
      },
      "CreateHotelDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Hotel name",
            "example": "Grand Capybara Hotel"
          },
          "email": {
            "type": "string",
            "description": "Hotel business email",
            "example": "contact@capybarahub.com"
          },
          "phone": {
            "type": "string",
            "description": "Hotel contact phone number",
            "example": "+5511999999999"
          },
          "address": {
            "description": "Hotel address details",
            "allOf": [{ "$ref": "#/components/schemas/CreateHotelAddressDto" }]
          }
        },
        "required": ["name", "email", "phone"]
      },
      "CreateRoomDto": {
        "type": "object",
        "properties": {
          "hotelId": { "type": "string", "description": "Hotel ID" },
          "roomTypeId": { "type": "string", "description": "Room type ID" },
          "pricePerNight": {
            "type": "string",
            "description": "Price per night for the room",
            "example": "150.00"
          },
          "roomNumber": {
            "type": "number",
            "description": "Room number in the hotel",
            "example": 101
          },
          "status": {
            "type": "string",
            "description": "Current status of the room",
            "enum": ["available", "occupied", "maintenance"],
            "example": "available"
          }
        },
        "required": [
          "hotelId",
          "roomTypeId",
          "pricePerNight",
          "roomNumber",
          "status"
        ]
      },
      "Room": { "type": "object", "properties": {} },
      "CreateBookingDto": {
        "type": "object",
        "properties": {
          "customerId": { "type": "string", "description": "Customer ID" },
          "hotelId": { "type": "string", "description": "Hotel ID" },
          "roomId": { "type": "string", "description": "Room ID" },
          "checkInDate": {
            "type": "string",
            "description": "Check-in date",
            "example": "2025-09-10"
          },
          "checkoutDate": {
            "type": "string",
            "description": "Check-out date",
            "example": "2025-09-15"
          },
          "totalPrice": {
            "type": "string",
            "description": "Total price",
            "example": "1000.00"
          },
          "status": {
            "type": "string",
            "description": "Booking status",
            "enum": ["pending", "confirmed", "completed", "cancelled"],
            "example": "pending"
          }
        },
        "required": [
          "customerId",
          "hotelId",
          "roomId",
          "checkInDate",
          "checkoutDate",
          "totalPrice",
          "status"
        ]
      },
      "Booking": { "type": "object", "properties": {} },
      "UpdateBookingDto": { "type": "object", "properties": {} }
    }
  }
}
